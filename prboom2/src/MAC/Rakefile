#################
# Configuration #
#################

NAME = 'PrBoom-Plus'
APPVERSION = '2.4.3.3'
require 'mac/macsupport'

DOOMWADDIR = File::expand_path('~/Library/Application Support/PrBoom-Plus')
@deutex = 'deutex'
@systemFrameworks += %w(Cocoa Carbon QuickTime)
@frameworks += %w(SDL SDL_net AGRegex)
@includes += ' -I. -IMAC'
@defines += ' -DHAVE_CONFIG_H'
@commonflags += ' -Wno-pointer-sign -Wno-packed'
@objcflags += ' -fobjc-exceptions'

if ENV['DEBUG']
	@commonflags += ' -g -DDEBUG -Wmissing-noreturn -Wredundant-decls -Wnested-externs -Wold-style-definition -Wshadow'
else
	@commonflags += ' -Os'
end

####################
# Bundle structure #
####################

installTask(:setup, CONTENTSDIR, 'mac/Info.plist')
task(:bundle => :setup)

installFrameworks(:frameworks)
task(:bundle => :frameworks)

##############
# App binary #
##############

sources = %w(
SDL/i_joy.c
SDL/i_sound.c
SDL/i_system.c
SDL/i_video.c
MAC/i_system.m
MAC/i_sound.c
MAC/SDLMain.m
am_map.c
d_client.c
d_deh.c
d_items.c
d_main.c
doomdef.c
doomstat.c
dstrings.c
e6y.c
f_finale.c
f_wipe.c
g_game.c
hu_lib.c
hu_stuff.c
i_main.c
i_udp_sdl.c
info.c
lprintf.c
m_argv.c
m_bbox.c
m_cheat.c
m_menu.c
m_misc.c
m_random.c
mmus2mid.c
p_ceilng.c
p_doors.c
p_enemy.c
p_floor.c
p_genlin.c
p_inter.c
p_lights.c
p_map.c
p_maputl.c
p_mobj.c
p_plats.c
p_pspr.c
p_saveg.c
p_setup.c
p_sight.c
p_spec.c
p_switch.c
p_telept.c
p_tick.c
p_user.c
r_bsp.c
r_data.c
r_draw.c
r_main.c
r_plane.c
r_segs.c
r_sky.c
r_things.c
s_sound.c
sounds.c
st_lib.c
st_stuff.c
tables.c
v_video.c
version.c
w_wad.c
w_mmap.c
wi_stuff.c
z_bmalloc.c
z_zone.c
)

launcherSources = %w(
MAC/LauncherApp.m
MAC/LauncherMain.m
MAC/RMUDAnsiTextView.m
MAC/UKKQueue.m
MAC/UKMainThreadProxy.m
)

buildBinary(:binary, BINDIR, 'PrBoom-Plus', sources)
buildBinary(:binary, BINDIR, 'Launcher', launcherSources)
task(:bundle => :binary)

############
# App data #
############

directory(ENGLISHDIR = "#{RESOURCEDIR}/English.lproj")
directory(MAINMENUDIR = "#{ENGLISHDIR}/MainMenu.nib")
installTask(:data, MAINMENUDIR, %w(MAC/English.lproj/MainMenu.nib/classes.nib MAC/English.lproj/MainMenu.nib/info.nib MAC/English.lproj/MainMenu.nib/keyedobjects.nib))
bundleDir(ENGLISHDIR)
bundleDir(MAINMENUDIR)

wadfiles = [Dir::glob('../data/graphics/*.ppm'),
            Dir::glob('../data/sprites/*.ppm'),
            Dir::glob('../data/lumps/*.lmp'),
            Dir::glob('../data/sounds/*.wav')].flatten

file("#{RESOURCEDIR}/prboom-plus.wad" => [RESOURCEDIR, '../data/prboom.txt', *wadfiles]) do |task|
	sh("cd ../data && DOOMWADDIR='#{DOOMWADDIR}' #{@deutex} -make prboom.txt ../src/#{task.name}")
end

task(:data => "#{RESOURCEDIR}/prboom-plus.wad")
installTask(:data, RESOURCEDIR, %w(MAC/PrBoom.icns MAC/Launcher.icns MAC/PrBoom.sdef))
task(:bundle => :data)


#######################
# Disk Image Creation #
#######################

task(:image => :bundle) do |t|
	imageName = "#{NAME}-#{APPVERSION}"
	imagePath = "/Volumes/#{imageName}"

	if File::directory?(imagePath)
		sh("diskutil unmount #{imagePath}")
	end

	sh("hdiutil create -fs HFS+ -volname #{imageName} -ov -type SPARSE -attach #{imageName}")
	cp_r([BUNDLEDIR, '../AUTHORS', '../COPYING', '../NEWS', '../README', '../doc'], imagePath)
	cp('MAC/Image-DS_Store', "#{imagePath}/.DS_Store")
	sh("diskutil unmount #{imagePath}")

	rm_f("#{imageName}.dmg")
	sh("hdiutil convert #{imageName}.sparseimage -format UDZO -o #{imageName}")
	rm("#{imageName}.sparseimage")
end

################
# Main targets #
################

task(:default => :bundle)
