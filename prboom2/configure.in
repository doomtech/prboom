dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.10 2000/05/11 07:26:36 cph Exp $
AC_INIT(src/d_main.c)

dnl --- Check for system type
AC_CANONICAL_SYSTEM

case "$target" in
	*-linux)
                AC_DEFINE(SECURE_UID)
                ;;
	*-linux-*)
		AC_DEFINE(SECURE_UID)
		;;
esac

use_i386_asm=no
case "$target" in
	i?86-*) AC_DEFINE(I386) use_i386_asm=yes ;;
esac

echo "checking whether can use x86 asm versions of some functions..." $use_i386_asm
if test "$use_i386_asm" = yes; then
	AC_DEFINE(I386_ASM)
fi
AM_CONDITIONAL(I386_ASM, test "$use_i386_asm" = yes)

CFLAGS_OPT="-O2 -fomit-frame-pointer"
dnl --- Option to enable debugging
AC_ARG_ENABLE(debug,[  --enable-debug	  turns on various debugging features, like range checking and internal heap diagnostics],
AC_DEFINE(RANGECHECK)
AC_DEFINE(INSTRUMENTED)
AC_DEFINE(TIMEDIAG)
CFLAGS_OPT="-g"
)
AC_ARG_ENABLE(profile,[  --enable-profile	  turns on profiling],
CFLAGS_OPT="-pg"
)
dnl --- some defaults for CFLAGS : josh
if test -z "$CFLAGS" ; then 
	CFLAGS="$CFLAGS_OPT -Wall -Winline -Wcast-align -Wwrite-strings -ffast-math -I`pwd`/src"
fi
export CFLAGS

dnl --- Fire up automake
AM_INIT_AUTOMAKE(lxdoom, 1.4.5)
AM_CONFIG_HEADER(config.h)

dnl --- Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB

dnl --- Try for processor optimisations
AC_ARG_ENABLE(cpu-opt,[  --disable-cpu-opt	  turns off cpu specific optimisations],,[
case "$target" in
	# marginal gains from aligning code
i386-*) SYS_CFLAGS="-m386" ;;
i486-*) SYS_CFLAGS="-m486" ;;
	# nothing special for pentium
	# CMOV op on ppro/II/686 can help us
i686-*) SYS_CFLAGS="-mcpu=i686 -march=i686" ;;
esac

echo -n "checking whether $CC supports CPU optimisations $SYS_CFLAGS..."
echo 'void f(){}' > conftest.c
if test -z "`${CC-cc} $SYS_CFLAGS -c conftest.c 2>&1`"; then
	CFLAGS="$CFLAGS $SYS_CFLAGS"
	echo "yes"
else
	echo "no"
fi
])

dnl --- Checks for typedefs
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_UID_T

AC_DECL_SYS_SIGLIST

dnl --- Compiler characteristics
AC_C_CONST
AC_C_INLINE
if test "$cross_compiling" != "yes"; then
	AC_C_BIGENDIAN
fi

BUILD_DIRS=

dnl --- Libraries
AC_PATH_X
AC_PATH_XTRA
if test "x$x_includes" != x; then
  CFLAGS="$CFLAGS -I$x_includes"
else
  CFLAGS="$CFLAGS"
fi
LIBS="$LIBS $X_LIBS $X_EXTRA_LIBS"
dnl --- cphipps - no longer need sqrt(3) AC_CHECK_LIB(m,sqrt)
AC_CHECK_LIB(Xext,XShmCreateImage,AC_DEFINE(HAVE_LIBXEXT) LIB_XEXT=-lXext,LIB_XEXT=,-lXext -lX11)
dnl --- CPhipps - disable XFree86 DGA support for release
dnl AC_CHECK_LIB(Xxf86dga,XF86DGADirectVideo,AC_DEFINE(HAVE_LIBXXF86DGA) LIB_XDGA=-lXxf86dga,LIB_XDGA=,-lXxf86dga -lXext -lX11)
dnl cph - disable lsdoom for now
dnl AC_CHECK_LIB(vga,vga_setpalvec,BUILD_LSDOOM=lsdoom,BUILD_LSDOOM=)
BUILD_LSDOOM=
dnl Check OSS audio emulation lib for (Net|Open)BSD
AC_CHECK_LIB(ossaudio,_oss_ioctl,LIB_SND=-lossaudio,LIB_SND=)


AM_PATH_SDL(1.0.1, BUILD_SDLDOOM=lsdldoom, BUILD_SDLDOOM=)

AC_CHECK_LIB(SDL_mixer,Mix_LoadMUS,[
    AC_DEFINE(HAVE_LIBSDL_MIXER)
    MIXER_LIBS=-lSDL_mixer
],,$SDL_LIBS)

AC_ARG_ENABLE(gl,[  --enable-gl	  	enable GL code],
enable_gl="yes"
SDL_LIBS="$SDL_LIBS -lGL -lGLU"
AC_DEFINE(GL_DOOM),
enable_gl="no"
)

AM_CONDITIONAL(BUILD_GL,test "$enable_gl" = "yes")

AC_CHECK_FUNC(socket,[
     has_net=yes
     BUILD_SERVER=lxdoom-game-server
],)
AC_ARG_ENABLE(net-game,[  --disable-net-game      turns off network game
support],[
     has_net=no
     BUILD_SERVER=
],) 
AM_CONDITIONAL(HAVE_NET, test "$has_net" = yes)
if test "$has_net" = yes
then
 AC_DEFINE(HAVE_NET)
fi

dnl --- Library functions
AC_CHECK_FUNC(stricmp,,AC_DEFINE(stricmp,strcasecmp)) 
AC_CHECK_FUNC(strnicmp,,AC_DEFINE(strnicmp,strncasecmp)) 
AC_CHECK_FUNCS(inet_aton inet_pton inet_ntop setsockopt vsnprintf snprintf)

dnl --- Check for headers
dnl - First, joystick
AC_CHECK_HEADERS(linux/joystick.h)
dnl - want ffz()
AC_CHECK_HEADERS(linux/bitops.h)
dnl - fast byte swaping code
AC_CHECK_HEADERS(asm/byteorder.h)
dnl - more standard stuff
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(unistd.h)
dnl - Check for soundcard.h
BUILD_SNDSERV=
AC_CHECK_HEADERS(sys/soundcard.h,BUILD_SNDSERV=sndserv)
AC_CHECK_HEADERS(machine/soundcard.h,BUILD_SNDSERV=sndserv)
AC_CHECK_HEADERS(soundcard.h,BUILD_SNDSERV=sndserv)

dnl --- Check for IPv6 stuff
AC_EGREP_HEADER(sockaddr_in6,netinet/in.h,AC_DEFINE(HAVE_IPv6))

dnl --- Always use highres mode, unless explicitely --disabled
AC_ARG_ENABLE(highres,[  --disable-highres	  disables support for resulutions greater than 320x200],,AC_DEFINE(HIGHRES))
dnl --- By default, simple checks with little overhead are done to catch memory corruption, or
dnl --- problems with new code
AC_ARG_ENABLE(checks,[  --disable-checks	  disables some basic internal sanity checks],,
AC_DEFINE(SIMPLECHECKS)
AC_DEFINE(ZONEIDCHECK))
AC_ARG_ENABLE(heapcheck,[  --enable-heapcheck	  turns on continuous heap checking (very slow)],AC_DEFINE(CHECKHEAP))
AC_ARG_ENABLE(heapdump,[  --enable-heapdump	  turns on dumping the heap state for debugging],AC_DEFINE(HEAPDUMP))

dnl --- Decide what programs to build
if test "$no_x" != yes
 then 
 BUILD_LXDOOM=lxdoom
 BUILD_DIRS="$BUILD_DIRS X11"
else
 BUILD_LXDOOM=
fi

if test "$BUILD_SDLDOOM" = "lsdldoom"
 then
 BUILD_DIRS="$BUILD_DIRS SDL"
fi

if test "$BUILD_SNDSERV" = "sndserv"
then
 BUILD_DIRS="$BUILD_DIRS OSS"
 dnl --- Nasty hack follows, sounds.c used by two dirs
 ln -fs ../sounds.c src/OSS/sounds.c
fi

if test "$BUILD_SNDSERV" = "sndserv" || test "$BUILD_LXDOOM" = "lxdoom"
then
BUILD_DIRS="POSIX $BUILD_DIRS"
fi

AC_SUBST(BUILD_DIRS)
AC_SUBST(BUILD_SNDSERV)
AC_SUBST(BUILD_LXDOOM)
AC_SUBST(BUILD_LSDOOM)
AC_SUBST(BUILD_SDLDOOM)
AC_SUBST(BUILD_SERVER)
AC_SUBST(MIXER_CFLAGS)
AC_SUBST(MIXER_LIBS)
AC_SUBST(NET_CFLAGS)
AC_SUBST(NET_LIBS)
AC_SUBST(LIB_XEXT)
AC_SUBST(LIB_XDGA)
AC_SUBST(LIB_SND)

dnl --- Pass install dirs to C pre-processor
dnl --- YUCK! but I can't see a better way to do this
if test "$prefix" = "NONE"
then prefix="/usr/local"
fi
if test "$exec_prefix" = "NONE"
then exec_prefix=$prefix
fi

dnl --- decide directories
gamesdir=$prefix/games
exp_gamesdir=`eval "echo $gamesdir"`
exp_datadir=`eval "echo $datadir"`
waddir=$exp_datadir/games/doom
dnl --- now finally spit them out
AC_DEFINE_UNQUOTED(SNDSERV_PATH,"$exp_gamesdir/sndserv")
AC_DEFINE_UNQUOTED(MUSSERV_PATH,"$exp_gamesdir/musserv")
AC_DEFINE_UNQUOTED(DOOMWADDIR,"$waddir")

dnl --- output
AC_OUTPUT(Makefile src/Makefile src/POSIX/Makefile src/OSS/Makefile src/X11/Makefile src/SDL/Makefile doc/Makefile data/Makefile lxdoom.spec)

